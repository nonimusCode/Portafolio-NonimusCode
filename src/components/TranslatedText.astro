---
const { key } = Astro.props;

declare global {
  interface WindowEventMap {
    "language-change": CustomEvent<"es" | "en">;
  }
}
---

<span data-i18n-key={key} class="i18n-text"></span>

<script>
  import { ui, defaultLang } from "../i18n/ui";
  import type { languages } from "../i18n/ui";

  type Language = keyof typeof languages;

  function updateTexts(lang: Language) {
    document.querySelectorAll(".i18n-text").forEach((element) => {
      const key = element.getAttribute("data-i18n-key");
      if (key && ui[lang] && key in ui[lang]) {
        element.textContent = ui[lang][key];
      }
    });
  }

  // Inicializar con el idioma guardado o el predeterminado
  const currentLang = (localStorage.getItem("language") ||
    defaultLang) as Language;
  updateTexts(currentLang);

  // Ahora TypeScript conoce el tipo de nuestro evento personalizado
  window.addEventListener("language-change", (e) => {
    updateTexts(e.detail);
  });
</script>
